/**
 * Orthanc API
 * This is the full documentation of the [REST API](https://orthanc.uclouvain.be/book/users/rest.html) of Orthanc.<p>This reference is automatically generated from the source code of Orthanc. A [shorter cheat sheet](https://orthanc.uclouvain.be/book/users/rest-cheatsheet.html) is part of the Orthanc Book.<p>An earlier, manually crafted version from August 2019, is [still available](2019-08-orthanc-openapi.html), but is not up-to-date anymore ([source](https://groups.google.com/g/orthanc-users/c/NUiJTEICSl8/m/xKeqMrbqAAAJ)).
 *
 * The version of the OpenAPI document: 1.12.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 */
export interface ModalitiesIdStorePostRequest { 
    /**
     * If `true`, run the job in asynchronous mode, which means that the REST API call will immediately return, reporting the identifier of a job. Prefer this flavor wherever possible.
     */
    Asynchronous?: boolean;
    /**
     * Called AET that is used for this commands, defaults to `AET` configuration option. Allows you to overwrite the destination AET for a specific operation.
     */
    CalledAet?: string;
    /**
     * Host that is used for this commands, defaults to `Host` configuration option. Allows you to overwrite the destination host for a specific operation.
     */
    Host?: string;
    /**
     * Local AET that is used for this commands, defaults to `DicomAet` configuration option. Ignored if `DicomModalities` already sets `LocalAet` for this modality.
     */
    LocalAet?: string;
    /**
     * Move originator AET that is used for this commands, in order to fake a C-MOVE SCU
     */
    MoveOriginatorAet?: string;
    /**
     * Move originator ID that is used for this commands, in order to fake a C-MOVE SCU
     */
    MoveOriginatorID?: number;
    /**
     * If `true`, ignore errors during the individual steps of the job.
     */
    Permissive?: boolean;
    /**
     * Port that is used for this command, defaults to `Port` configuration option. Allows you to overwrite the destination port for a specific operation.
     */
    Port?: number;
    /**
     * In asynchronous mode, the priority of the job. The lower the value, the higher the priority.
     */
    Priority?: number;
    /**
     * List of the Orthanc identifiers of all the DICOM resources to be sent
     */
    Resources?: Array<string>;
    /**
     * Whether to chain C-STORE with DICOM storage commitment to validate the success of the transmission: https://orthanc.uclouvain.be/book/users/storage-commitment.html#chaining-c-store-with-storage-commitment
     */
    StorageCommitment?: boolean;
    /**
     * If `true`, run the job in synchronous mode, which means that the HTTP answer will directly contain the result of the job. This is the default, easy behavior, but it is *not* desirable for long jobs, as it might lead to network timeouts.
     */
    Synchronous?: boolean;
    /**
     * Timeout for the C-STORE command, in seconds
     */
    Timeout?: number;
}

